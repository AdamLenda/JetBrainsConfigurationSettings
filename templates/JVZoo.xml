<templateSet group="JVZoo">
  <template name="prcf" value="\CCT::pr((__METHOD__.&quot;[&quot;.__LINE__.&quot;] $label$&quot;$value$);" description="print class line and function" toReformat="false" toShortenFQNames="true">
    <variable name="label" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="value" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
      <option name="PHP Class Member" value="false" />
      <option name="PHP Comment" value="false" />
      <option name="PHP String Literal" value="false" />
    </context>
  </template>
  <template name="propa" value="//region $REGION_NAME$&#10;/**&#10; * @var array[$DATA_TYPE$]&#10; */&#10;protected $$$VALUE_NAME$;&#10;&#10;/**&#10; * Returns the array $VALUE_NAME$&#10; * @return array&#10; */&#10;public function getAll$PROPERTY_NAME$()&#10;{&#10;    return $this-&gt;$VALUE_NAME$;&#10;}&#10;&#10;/**&#10; * Assigns values from the $$$VALUE_NAME$ parameter to the $VALUE_NAME$ member while maintaining&#10; * the array index&#10; * @param array[$DATA_TYPE$] &#10; * @return self&#10; */&#10;public function setAll$PROPERTY_NAME$(array $$$VALUE_NAME$)&#10;{&#10;    $this-&gt;$VALUE_NAME$ = [];&#10;    if (!empty($$$VALUE_NAME$)) {&#10;        foreach ($$$VALUE_NAME$ as $value) {&#10;            $this-&gt;set$PROPERTY_NAME$($value);&#10;        }&#10;    }&#10;    &#10;    $this-&gt;$VALUE_NAME$ = $$$VALUE_NAME$;&#10;    return $this;&#10;}&#10;&#10;/**&#10; * Sets one $DATA_TYPE$ value to the correct index of the $$$VALUE_NAME$ array.&#10; * @param $DATA_TYPE$ any the value to add to the array&#10; * @return self&#10; */&#10;public function set$PROPERTY_NAME$($DATA_TYPE$ $$value)&#10;{&#10;    $this-&gt;$VALUE_NAME$[$$value-&gt;$INDEX_SELECTOR$] = $$value;&#10;    return $this;&#10;}&#10;&#10;/**&#10; * Uses the parameter to find the index then calls unset on that index&#10; * @param mixed the index of the value to remove from the array&#10; * @return self&#10; */&#10;public function remove$PROPERTY_NAME$($DATA_TYPE$ $$value)&#10;{&#10;    if (array_key_exists($$value-&gt;$INDEX_SELECTOR$, $this-&gt;$VALUE_NAME$)) {&#10;        unset($this-&gt;$VALUE_NAME$[$$value-&gt;$INDEX_SELECTOR$]);&#10;    }&#10;    return $this;&#10;}&#10;&#10;/**&#10; * @param mixed index value&#10; * @return null|$DATA_TYPE$&#10; */&#10;public function get$PROPERTY_NAME$ByIndex($$index)&#10;{&#10;    if (array_key_exists($$index, $this-&gt;$VALUE_NAME$)) {&#10;        return $this-&gt;$VALUE_NAME$[$$index];&#10;    }&#10;    return null;&#10;}&#10;&#10;/**&#10; * Calls unset for the specified index of the array&#10; * @param mixed the index of the value to remove from the array&#10; * @return self&#10; */&#10;public function remove$PROPERTY_NAME$ByIndex($$index)&#10;{&#10;    if (array_key_exists($$index, $this-&gt;$VALUE_NAME$)) {&#10;        unset($this-&gt;$VALUE_NAME$[$$index]);&#10;    }&#10;    return $this;&#10;}&#10;//endregion $REGION_NAME$" description="array property, for single values ues prop" toReformat="true" toShortenFQNames="true">
    <variable name="PROPERTY_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="VALUE_NAME" expression="decapitalize(PROPERTY_NAME)" defaultValue="" alwaysStopAt="true" />
    <variable name="DATA_TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="INDEX_SELECTOR" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="REGION_NAME" expression="PROPERTY_NAME" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
  <template name="propro" value="/**&#10; * @var $TYPE_NAME$&#10; */&#10;private $$$VALUE_NAME$;&#10;&#10;/**&#10; * @return $TYPE_NAME$&#10; */&#10;public function get$PROPERTY_NAME$()&#10;{&#10;    return $this-&gt;$VALUE_NAME$;&#10;}&#10;&#10;/**&#10; * @param $TYPE_NAME$&#10; * @return $this&#10; */&#10;protected function set$PROPERTY_NAME$($PARAMETER_TYPE_NAME$ $$$VALUE_NAME$)&#10;{&#10;    $this-&gt;$VALUE_NAME$ = $$$VALUE_NAME$;&#10;    return $this;&#10;}" description="readonly property" toReformat="true" toShortenFQNames="true">
    <variable name="PROPERTY_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="VALUE_NAME" expression="decapitalize(PROPERTY_NAME)" defaultValue="" alwaysStopAt="true" />
    <variable name="TYPE_NAME" expression="TYPE_NAME" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAMETER_TYPE_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
  <template name="prop" value="//region $PROPERTY_NAME$ Property&#10;/**&#10; * $DESCRIPTION_1$&#10; *&#10; * @var $TYPE_NAME$ $FIELD_DESCRIPTION_1$&#10; */&#10;private $$$VALUE_NAME$ = $INITIAL_VALUE$;&#10;&#10;/**&#10; * $DESCRIPTION_2$&#10; *&#10; * @return $TYPE_NAME$ $FIELD_DESCRIPTION_2$&#10; */&#10;public function get$PROPERTY_NAME$()&#10;{&#10;    return $this-&gt;$VALUE_NAME$;&#10;}&#10;&#10;/**&#10; * $DESCRIPTION_3$&#10; *&#10; * @param $TYPE_NAME$ $FIELD_DESCRIPTION_3$&#10; * @return $this&#10; */&#10;public function set$PROPERTY_NAME$($PARAMETER_TYPE_NAME$ $$$VALUE_NAME$)&#10;{&#10;    $this-&gt;$VALUE_NAME$ = $$$VALUE_NAME$;&#10;    return $this;&#10;}&#10;//endregion $PROPERTY_NAME$ Property&#10;&#10;$END$" description="read / write property" toReformat="true" toShortenFQNames="true">
    <variable name="PROPERTY_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="VALUE_NAME" expression="decapitalize(PROPERTY_NAME)" defaultValue="" alwaysStopAt="true" />
    <variable name="TYPE_NAME" expression="TYPE_NAME" defaultValue="" alwaysStopAt="true" />
    <variable name="FIELD_DESCRIPTION_1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="FIELD_DESCRIPTION_2" expression="FIELD_DESCRIPTION_1" defaultValue="" alwaysStopAt="false" />
    <variable name="FIELD_DESCRIPTION_3" expression="FIELD_DESCRIPTION_2" defaultValue="" alwaysStopAt="false" />
    <variable name="INITIAL_VALUE" expression="" defaultValue="&quot;null&quot;" alwaysStopAt="true" />
    <variable name="PARAMETER_TYPE_NAME" expression="TYPE_NAME" defaultValue="" alwaysStopAt="true" />
    <variable name="DESCRIPTION_1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="DESCRIPTION_2" expression="DESCRIPTION_1" defaultValue="" alwaysStopAt="true" />
    <variable name="DESCRIPTION_3" expression="DESCRIPTION_2" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
  <template name="reg" value="//region $REGION_NAME$&#10;&#10;$END$&#10;&#10;//endregion $REGION_NAME$" description="region" toReformat="true" toShortenFQNames="true">
    <variable name="REGION_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="prcallstack" value="echo \JVZoo\Tools\CallStackTools::depthFirstCallStack().&quot;\n&quot;;&#10;" description="Echo Depth First Callstack" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
      <option name="PHP Comment" value="false" />
      <option name="PHP String Literal" value="false" />
    </context>
  </template>
  <template name="pr" value="\CCT::pr($VALUE$);" description="" toReformat="false" toShortenFQNames="true">
    <variable name="VALUE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Expression" value="true" />
      <option name="PHP Statement" value="true" />
    </context>
  </template>
</templateSet>